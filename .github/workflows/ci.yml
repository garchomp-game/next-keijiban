name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: keijiban
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            tests/package-lock.json
            frontend/package-lock.json
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt
      
      # Environment setup
      - run: cp backend/.env.example backend/.env
      - run: cp frontend/.env.local.example frontend/.env.local
      
      # Install dependencies
      - run: npm ci
      - run: npm --prefix tests ci
      - run: npm --prefix frontend ci
      - run: npx --prefix tests playwright install --with-deps
      - run: pip install -r backend/requirements.txt
      
      # Database setup
      - name: Run database migrations
        run: |
          cd backend
          export DATABASE_URL=postgresql+psycopg://postgres:postgres@localhost:5432/keijiban
          export REDIS_URL=redis://localhost:6379/0
          alembic upgrade head
        env:
          DATABASE_URL: postgresql+psycopg://postgres:postgres@localhost:5432/keijiban
          REDIS_URL: redis://localhost:6379/0
      
      # Start services in background
      - name: Start backend
        run: |
          cd backend
          export DATABASE_URL=postgresql+psycopg://postgres:postgres@localhost:5432/keijiban
          export REDIS_URL=redis://localhost:6379/0
          export CORS_ORIGIN=http://localhost:3000
          python app.py &
          echo $! > backend.pid
        env:
          DATABASE_URL: postgresql+psycopg://postgres:postgres@localhost:5432/keijiban
          REDIS_URL: redis://localhost:6379/0
          CORS_ORIGIN: http://localhost:3000
      
      - name: Start frontend
        run: |
          cd frontend
          export NEXT_PUBLIC_API_BASE_URL=http://localhost:5000
          export NEXT_PUBLIC_WS_URL=http://localhost:5000/ws
          npm run dev &
          echo $! > frontend.pid
        env:
          NEXT_PUBLIC_API_BASE_URL: http://localhost:5000
          NEXT_PUBLIC_WS_URL: http://localhost:5000/ws
      
      # Wait for services
      - name: Wait for services
        run: |
          echo "Waiting for services to start..."
          for i in {1..60}; do
            if curl -fsS http://localhost:5000/healthz >/dev/null 2>&1 && curl -fsS http://localhost:3000 >/dev/null 2>&1; then
              echo "All services are ready!"
              exit 0
            fi
            echo "Waiting for services... ($i/60)"
            sleep 3
          done
          echo "Services did not become ready in time"
          exit 1
      
      # Run tests
      - run: npm run lint
      - run: npm run typecheck
      - run: pytest backend/
      - run: npm run e2e
      - run: npm run smoke
      
      # Cleanup
      - name: Stop services
        if: always()
        run: |
          if [ -f backend/backend.pid ]; then kill $(cat backend/backend.pid) || true; fi
          if [ -f frontend/frontend.pid ]; then kill $(cat frontend/frontend.pid) || true; fi
      
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: |
            tests/test-results
            tests/playwright-report
